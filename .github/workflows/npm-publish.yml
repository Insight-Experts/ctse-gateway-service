name: Node.js CI/CD Gateway

on:
  push:
    branches: 
      - main
      - release/*
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install Dependencies
      run: npm ci
    - name: Build
      run: npm run build --if-present
    - name: Test
      run: npm test

  Containerization:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and push Docker image to dockerhub
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./dockerfile # Path to Dockerfile
        push: true
        tags: ctse2024/gateway-service:v1.0.0.0

  DeployToAKS:
    needs: Containerization
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    - name: 'Log into Azure using github secret AZURE_CREDENTIALS'
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true
    - name: 'Run az commands'
      run: |
        az account show
        az group list
    - name: Set Azure subscription
      run: az account set --subscription ${{ secrets.AZ_SUBSCRIPTION_ID }}
    - name: Set AKS context
      run: az aks get-credentials --resource-group ${{ secrets.AZ_RESOURCE_GROUP }} --name ${{ secrets.AZ_CLUSTER }}
    - name: Deploy gateway deployment to AKS
      run: kubectl apply -f kubernetes/gateway-deployment.yaml
    - name: Deploy gateway service to AKS
      run: kubectl apply -f kubernetes/gateway-service.yaml
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    - name: Get Service IP Address
      run: kubectl get services
